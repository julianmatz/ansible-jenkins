# Provision EC2 instance
---
- hosts: localhost
  gather_facts: false
  vars_files:
    - vars.yml

  tasks:
    - name: Provision instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: "{{ aws_key_name }}"
        group_id: "{{ aws_security_group }}"
        instance_type: "{{ aws_instance_type }}"
        image: "{{ aws_ami }}"
        wait: yes
        count: 1
        region: "{{ aws_region }}"
        vpc_subnet_id: "{{ aws_vpc_subnet }}"
        assign_public_ip: yes
      register: result

    - name: Update DNS zone
      uri:
        url: https://api.cloudns.net/dns/mod-record.json
        method: post
        body_format: form-urlencoded
        body:
          sub-auth-id: "{{ dns_auth_id }}"
          auth-password: "{{ dns_auth_pw }}"
          domain-name: "{{ dns_domain }}"
          record-id: "{{ dns_record_id }}"
          host: "*"
          record: "{{result.instances.0.public_ip}}"
          ttl: 600

    - name: Add EC2 instance as host
      add_host:
        name: "{{ result.instances.0.public_ip }}"
        group: ec2
        ansible_user: ubuntu
        ansible_ssh_private_key_file: ~/.ssh/devops

    - name: Pause for EC2 instance to complete provisioning
      pause:
        minutes: 1

    - name: Add EC2 hosts key to known_hosts file
      shell: "ssh-keyscan -H {{ result.instances.0.public_ip }}  >> ~/.ssh/known_hosts"

- hosts: ec2
  gather_facts: false
  become: yes
  become_user: root
  vars_files:
    - vars.yml
  tasks:

    - name: Verify connection to EC2 instance, or wait until connection can be established
      wait_for_connection:
        sleep: 10
        timeout: 900

    - name: Configure EC2 instance
      include: ec2-configure.yml

